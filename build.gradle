import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'groovy'

ext {
    // The drivers we want to use
    drivers = ["phantomJs"]

    ext {
        phantomJsVersion = '1.9.8'
    }
}

apply from:   'gradle/osSpecificDownloads.gradle'

group = 'ee.leola'
version = '1.0-SNAPSHOT'

mainClassName = 'ee.leola.kassa.Server'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "http://repo.maven.apache.org/maven2" }
}

configurations {
    ebean
}

task ebeanEnhancer {
    doLast {
        ant.taskdef(name: 'ebeanEnhance', classname: 'com.avaje.ebean.enhance.ant.AntEnhanceTask', classpath: configurations.ebean.asPath)
        println(buildDir.getAbsolutePath() + '/class/main')
        ant.ebeanEnhance(
                classSource: buildDir.getAbsolutePath() + '/classes/main',
                packages: 'ee.leola.kassa.models.**',
                transformArgs: 'debug=1'
        )
    }
}

classes {
    dependsOn ebeanEnhancer
}

testClasses {
    dependsOn ebeanEnhancer
}

dependencies {
    ebean 'org.avaje.ebeanorm:avaje-ebeanorm-mavenenhancer:3.3.2'
    compile 'org.slf4j:slf4j-api:1.7.6'
    compile 'org.slf4j:jul-to-slf4j:1.7.6'
    compile 'org.slf4j:jcl-over-slf4j:1.7.6'
    compile 'org.slf4j:log4j-over-slf4j:1.7.6'
    compile 'ch.qos.logback:logback-classic:1.1.1'
    compile 'org.avaje.ebeanorm:avaje-ebeanorm:3.3.2'
    compile 'org.avaje.ebeanorm:avaje-ebeanorm-agent:3.2.2'
    compile 'mysql:mysql-connector-java:5.1.30'
    compile 'org.liquibase:liquibase-core:3.1.1'
    compile 'de.neuland-bfi:jade4j:0.4.0'
    compile 'com.fasterxml.jackson.core:jackson-core:2.3.2'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.3.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.3.2'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.3.2'
    compile 'org.glassfish.jersey.containers:jersey-container-simple-http:2.7'
    compile 'com.google.guava:guava:16.0.1'

    testCompile 'org.codehaus.groovy:groovy-all:2.3.8'
    testCompile "org.gebish:geb-spock:0.10.0"
    testCompile 'com.h2database:h2:1.3.175'
    testCompile "org.spockframework:spock-core:0.7-groovy-2.0"

    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:2.43.1"
    testCompile ( "com.github.detro:phantomjsdriver:1.2.0" ) {
        transitive = false
    }
}

drivers.each { driver ->
    task "${driver}Test"(type: Test) {
        reports {
            html.destination = reporting.file("$name/tests")
            junitXml.destination = file("$buildDir/test-results/$name")
        }

        outputs.upToDateWhen { false }  // Always run tests

        systemProperty "geb.build.reportsDir", reporting.file("$name/geb")
        systemProperty "geb.env", driver

    }
}

phantomJsTest {
    dependsOn unzipPhantomJs

    def phantomJsFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "phantomjs.exe" : "bin/phantomjs"
    systemProperty "phantomjs.binary.path", new File(unzipPhantomJs.outputs.files.singleFile, phantomJsFilename).absolutePath
}

test {
    dependsOn drivers.collect { tasks["${it}Test"] }
    enabled = false
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}